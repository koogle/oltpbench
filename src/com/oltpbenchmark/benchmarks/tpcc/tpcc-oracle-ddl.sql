BEGIN EXECUTE IMMEDIATE 'DROP TABLE CUSTOMER'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE CUSTOMER (
C_ID NUMBER
, C_D_ID NUMBER
, C_W_ID NUMBER
, C_DISCOUNT NUMBER
, C_CREDIT CHAR(2)
, C_LAST VARCHAR2(16)
, C_FIRST VARCHAR2(16)
, C_CREDIT_LIM NUMBER
, C_BALANCE NUMBER
, C_YTD_PAYMENT NUMBER
, C_PAYMENT_CNT NUMBER
, C_DELIVERY_CNT NUMBER
, C_STREET_1 VARCHAR2(20)
, C_STREET_2 VARCHAR2(20)
, C_CITY VARCHAR2(20)
, C_STATE CHAR(2)
, C_ZIP CHAR(9)
, C_PHONE CHAR(16)
, C_SINCE DATE
, C_MIDDLE CHAR(2)
, C_DATA CHAR(500)
);


BEGIN EXECUTE IMMEDIATE 'DROP TABLE DISTRICT'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE DISTRICT (
  D_ID NUMBER
, D_W_ID NUMBER
, D_YTD NUMBER
, D_NEXT_O_ID NUMBER
, D_TAX NUMBER
, D_NAME VARCHAR2(10)
, D_STREET_1 VARCHAR2(20)
, D_STREET_2 VARCHAR2(20)
, D_CITY VARCHAR2(20)
, D_STATE CHAR(2)
, D_ZIP CHAR(9)
);

BEGIN EXECUTE IMMEDIATE 'DROP TABLE HISTORY'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE HISTORY (
  H_C_ID NUMBER
, H_C_D_ID NUMBER
, H_C_W_ID NUMBER
, H_D_ID NUMBER
, H_W_ID NUMBER
, H_DATE DATE
, H_AMOUNT NUMBER
, H_DATA VARCHAR2(24)
);

BEGIN EXECUTE IMMEDIATE 'DROP TABLE ITEM'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE ITEM (
  I_ID NUMBER(6,0)
, I_NAME VARCHAR2(24)
, I_PRICE NUMBER
, I_DATA VARCHAR2(50)
, I_IM_ID NUMBER
);

BEGIN EXECUTE IMMEDIATE 'DROP TABLE NEW_ORDER'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE NEW_ORDER (
  NO_W_ID NUMBER
, NO_D_ID NUMBER
, NO_O_ID NUMBER SORT
, CONSTRAINT NORD_UK PRIMARY KEY ( NO_W_ID, NO_D_ID, NO_O_ID)
);

BEGIN EXECUTE IMMEDIATE 'DROP TABLE OORDER'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE OORDER (
  O_ID NUMBER SORT
, O_W_ID NUMBER
, O_D_ID NUMBER
, O_C_ID NUMBER
, O_CARRIER_ID NUMBER
, O_OL_CNT NUMBER
, O_ALL_LOCAL NUMBER
, O_ENTRY_D DATE
, CONSTRAINT ORDR_UK PRIMARY KEY ( O_W_ID, O_D_ID, O_ID )
);


BEGIN EXECUTE IMMEDIATE 'DROP TABLE ORDER_LINE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE ORDER_LINE (
  OL_W_ID NUMBER
, OL_D_ID NUMBER
, OL_O_ID NUMBER SORT
, OL_NUMBER NUMBER SORT
, OL_I_ID NUMBER
, OL_DELIVERY_D DATE
, OL_AMOUNT NUMBER
, OL_SUPPLY_W_ID NUMBER
, OL_QUANTITY NUMBER
, OL_DIST_INFO CHAR(24)
, CONSTRAINT ORDL_UK PRIMARY KEY (OL_W_ID, OL_D_ID, OL_O_ID, OL_NUMBER)
);


BEGIN EXECUTE IMMEDIATE 'DROP TABLE STOCK'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE STOCK (
  S_I_ID NUMBER
, S_W_ID NUMBER
, S_QUANTITY NUMBER
, S_YTD NUMBER
, S_ORDER_CNT NUMBER
, S_REMOTE_CNT NUMBER
, S_DATA VARCHAR2(50)
, S_DIST_01 CHAR(24)
, S_DIST_02 CHAR(24)
, S_DIST_03 CHAR(24)
, S_DIST_04 CHAR(24)
, S_DIST_05 CHAR(24)
, S_DIST_06 CHAR(24)
, S_DIST_07 CHAR(24)
, S_DIST_08 CHAR(24)
, S_DIST_09 CHAR(24)
, S_DIST_10 CHAR(24)
);


BEGIN EXECUTE IMMEDIATE 'DROP TABLE WAREHOUSE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;;
CREATE TABLE WAREHOUSE (
  W_ID NUMBER
, W_YTD NUMBER
, W_TAX NUMBER
, W_NAME VARCHAR2(10)
, W_STREET_1 VARCHAR2(20)
, W_STREET_2 VARCHAR2(20)
, W_CITY VARCHAR2(20)
, W_STATE CHAR(2)
, W_ZIP CHAR(9)
);


-- INDEXES

--INDEX DISTRICT
CREATE UNIQUE INDEX IDIST ON DISTRICT ( D_W_ID, D_ID )
  PCTFREE 5  INITRANS 3
  STORAGE ( BUFFER_POOL DEFAULT )
  PARALLEL 1
  COMPUTE STATISTICS;

--INDEX CUSTOMER
CREATE UNIQUE INDEX ICUST1 ON CUSTOMER ( C_W_ID, C_D_ID, C_ID )
  PCTFREE 1  INITRANS 3
  STORAGE ( BUFFER_POOL DEFAULT )
  PARALLEL 4
  COMPUTE STATISTICS;

--INDEX CUSTOMER ...
CREATE UNIQUE INDEX ICUST2 ON CUSTOMER ( C_LAST, C_W_ID, C_D_ID, C_ID )
  PCTFREE 1  INITRANS 3
  STORAGE ( BUFFER_POOL DEFAULT )
  PARALLEL 4
  COMPUTE STATISTICS;

--PROMPT CREATING PRIMARY KEY CONSTRAINT PRIMARY_2 ON TABLE ITEM ... 
CREATE UNIQUE INDEX IITEM ON ITEM ( I_ID )
  PCTFREE 5  INITRANS 4
  STORAGE ( BUFFER_POOL DEFAULT )
  COMPUTE STATISTICS;

-- INDEX WAREHOUSE 
CREATE UNIQUE INDEX IWAREHOUSE ON WAREHOUSE ( W_ID )
  PCTFREE 1  INITRANS 3
  STORAGE ( BUFFER_POOL DEFAULT )
  PARALLEL 1
  COMPUTE STATISTICS;

-- INDEX STOCK
CREATE UNIQUE INDEX ISTOCK ON STOCK ( S_I_ID, S_W_ID )
  PCTFREE 1  INITRANS 3
  STORAGE ( BUFFER_POOL DEFAULT )
  PARALLEL 4
  COMPUTE STATISTICS;
  
--INDEX ON OORDER...
CREATE UNIQUE INDEX IOORDER ON OORDER ( O_W_ID, O_D_ID, O_C_ID, O_ID )
  PARALLEL 4
  PCTFREE 25  INITRANS 4
  STORAGE ( BUFFER_POOL DEFAULT )
  COMPUTE STATISTICS;